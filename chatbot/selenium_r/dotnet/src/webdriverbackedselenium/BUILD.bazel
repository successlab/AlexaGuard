load("@d2l_rules_csharp//csharp:defs.bzl", "csharp_library")
load("//common:defs.bzl", "copy_file")
load("//dotnet:nuget.bzl", "nuget_package")
load("//dotnet:assembly-info.bzl", "generated_assembly_info")
load(
    "//dotnet:selenium-dotnet-version.bzl",
    "ASSEMBLY_COMPANY",
    "ASSEMBLY_COPYRIGHT",
    "ASSEMBLY_INFORMATIONAL_VERSION",
    "ASSEMBLY_PRODUCT",
    "ASSEMBLY_VERSION",
    "SE_VERSION",
    "SUPPORTED_NET_FRAMEWORKS",
    "SUPPORTED_NET_STANDARD_VERSIONS",
)

generated_assembly_info(
    name = "assembly-info",
    company = ASSEMBLY_COMPANY,
    copyright = ASSEMBLY_COPYRIGHT,
    description = "Selenium RC API using WebDriver .NET Bindings",
    informational_version = ASSEMBLY_INFORMATIONAL_VERSION,
    product = ASSEMBLY_PRODUCT,
    title = "Selenium WebDriver WebDriverBackedSelenium",
    version = ASSEMBLY_VERSION,
)

[csharp_library(
    name = "{}".format(framework),
    srcs = glob([
        "*.cs",
        "Internal/**/*.cs",
    ]) + [":assembly-info"],
    out = "Selenium.WebDriverBackedSelenium",
    resources = [
        "//java/client/src/com/thoughtworks/selenium/webdriven:htmlutils.js",
        "//java/client/src/com/thoughtworks/selenium/webdriven:injectableSelenium.js",
        "//javascript/selenium-atoms:findElement.js",
        "//javascript/selenium-atoms:findOption.js",
        "//javascript/selenium-atoms:fireEvent.js",
        "//javascript/selenium-atoms:fireEventAt.js",
        "//javascript/selenium-atoms:getText.js",
        "//javascript/selenium-atoms:isElementPresent.js",
        "//javascript/selenium-atoms:isSomethingSelected.js",
        "//javascript/selenium-atoms:isTextPresent.js",
        "//javascript/selenium-atoms:isVisible.js",
        "//javascript/selenium-atoms:linkLocator.js",
        "//javascript/selenium-atoms:type.js",
    ],
    target_frameworks = [
        "{}".format(framework),
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@net//:System",
        "@net//:System.Core",
        "@net//:System.Data",
        "@net//:System.Drawing",
        "@net//:System.IO.Compression",
        "@net//:System.IO.Compression.FileSystem",
        "@net//:System.Net.Http",
        "@net//:System.Runtime.Serialization",
        "@net//:System.Xml",
        "//dotnet/src/webdriver:{}".format(framework),
    ],
) for framework in SUPPORTED_NET_FRAMEWORKS]

[csharp_library(
    name = "{}".format(standard_version),
    srcs = glob([
        "*.cs",
        "Internal/**/*.cs",
    ]) + [":assembly-info"],
    out = "Selenium.WebDriverBackedSelenium",
    resources = [
        "//java/client/src/com/thoughtworks/selenium/webdriven:htmlutils.js",
        "//java/client/src/com/thoughtworks/selenium/webdriven:injectableSelenium.js",
        "//javascript/selenium-atoms:findElement.js",
        "//javascript/selenium-atoms:findOption.js",
        "//javascript/selenium-atoms:fireEvent.js",
        "//javascript/selenium-atoms:fireEventAt.js",
        "//javascript/selenium-atoms:getText.js",
        "//javascript/selenium-atoms:isElementPresent.js",
        "//javascript/selenium-atoms:isSomethingSelected.js",
        "//javascript/selenium-atoms:isTextPresent.js",
        "//javascript/selenium-atoms:isVisible.js",
        "//javascript/selenium-atoms:linkLocator.js",
        "//javascript/selenium-atoms:type.js",
    ],
    target_frameworks = [
        "{}".format(standard_version),
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//dotnet/src/webdriver:{}assembly".format(standard_version),
    ],
) for standard_version in SUPPORTED_NET_STANDARD_VERSIONS]

[csharp_library(
    name = "{}-strongnamed".format(framework),
    srcs = glob([
        "*.cs",
        "Internal/**/*.cs",
    ]) + [":assembly-info"],
    out = "strongnamed/Selenium.WebDriverBackedSelenium",
    keyfile = "//dotnet:WebDriver.snk",
    resources = [
        "//java/client/src/com/thoughtworks/selenium/webdriven:htmlutils.js",
        "//java/client/src/com/thoughtworks/selenium/webdriven:injectableSelenium.js",
        "//javascript/selenium-atoms:findElement.js",
        "//javascript/selenium-atoms:findOption.js",
        "//javascript/selenium-atoms:fireEvent.js",
        "//javascript/selenium-atoms:fireEventAt.js",
        "//javascript/selenium-atoms:getText.js",
        "//javascript/selenium-atoms:isElementPresent.js",
        "//javascript/selenium-atoms:isSomethingSelected.js",
        "//javascript/selenium-atoms:isTextPresent.js",
        "//javascript/selenium-atoms:isVisible.js",
        "//javascript/selenium-atoms:linkLocator.js",
        "//javascript/selenium-atoms:type.js",
    ],
    target_frameworks = [
        "{}".format(framework),
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@net//:System",
        "@net//:System.Core",
        "@net//:System.Data",
        "@net//:System.Drawing",
        "@net//:System.IO.Compression",
        "@net//:System.IO.Compression.FileSystem",
        "@net//:System.Net.Http",
        "@net//:System.Runtime.Serialization",
        "@net//:System.Xml",
        "//dotnet/src/webdriver:{}-strongnamed".format(framework),
    ],
) for framework in SUPPORTED_NET_FRAMEWORKS]

[csharp_library(
    name = "{}-strongnamed".format(standard_version),
    srcs = glob([
        "*.cs",
        "Internal/**/*.cs",
    ]) + [":assembly-info"],
    out = "strongnamed/Selenium.WebDriverBackedSelenium",
    keyfile = "//dotnet:WebDriver.snk",
    resources = [
        "//java/client/src/com/thoughtworks/selenium/webdriven:htmlutils.js",
        "//java/client/src/com/thoughtworks/selenium/webdriven:injectableSelenium.js",
        "//javascript/selenium-atoms:findElement.js",
        "//javascript/selenium-atoms:findOption.js",
        "//javascript/selenium-atoms:fireEvent.js",
        "//javascript/selenium-atoms:fireEventAt.js",
        "//javascript/selenium-atoms:getText.js",
        "//javascript/selenium-atoms:isElementPresent.js",
        "//javascript/selenium-atoms:isSomethingSelected.js",
        "//javascript/selenium-atoms:isTextPresent.js",
        "//javascript/selenium-atoms:isVisible.js",
        "//javascript/selenium-atoms:linkLocator.js",
        "//javascript/selenium-atoms:type.js",
    ],
    target_frameworks = [
        "{}".format(standard_version),
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//dotnet/src/webdriver:{}assembly-strongnamed".format(standard_version),
    ],
) for standard_version in SUPPORTED_NET_STANDARD_VERSIONS]

nuget_package(
    name = "package",
    src = "Selenium.WebDriverBackedSelenium.nuspec",
    package_id = "Selenium.WebDriverBackedSelenium",
    package_version = "{}".format(SE_VERSION),
    visibility = ["//visibility:public"],
    deps = [
        ":net45",
        ":net46",
        ":net47",
        ":net48",
        ":netstandard2.0",
        ":netstandard2.1",
    ],
)

[copy_file(
    name = "copy-{}-strongnamed".format(framework),
    src = ":{}-strongnamed".format(framework),
    out = "strongnamed/{}/Selenium.WebDriverBackedSelenium.dll".format(framework),
    visibility = ["//visibility:public"],
) for framework in SUPPORTED_NET_FRAMEWORKS]

[copy_file(
    name = "copy-{}-strongnamed".format(standard_version),
    src = ":{}-strongnamed".format(standard_version),
    out = "strongnamed/{}/Selenium.WebDriverBackedSelenium.dll".format(standard_version),
    visibility = ["//visibility:public"],
) for standard_version in SUPPORTED_NET_STANDARD_VERSIONS]

nuget_package(
    name = "package-strongnamed",
    src = "Selenium.WebDriverBackedSelenium.nuspec",
    package_id = "Selenium.WebDriverBackedSelenium.StrongNamed",
    package_version = "{}".format(SE_VERSION),
    visibility = ["//visibility:public"],
    deps = [
        ":copy-net45-strongnamed",
        ":copy-net46-strongnamed",
        ":copy-net47-strongnamed",
        ":copy-net48-strongnamed",
        ":copy-netstandard2.0-strongnamed",
        ":copy-netstandard2.1-strongnamed",
    ],
)
