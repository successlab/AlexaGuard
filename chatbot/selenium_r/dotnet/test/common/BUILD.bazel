load("//dotnet:nunit-test.bzl", "nunit_test")

SUPPORTED_BROWSERS = [
    ("chrome", "Chrome"),
    ("chromedev", "ChromeDev"),
    ("firefox", "Firefox"),
    ("firefoxnightly", "FirefoxNightly"),
    ("ie", "IE"),
    ("edge", "Edge"),
    ("edgelegacy", "EdgeLegacy"),
    ("safari", "Safari"),
    ("safaritechpreview", "SafariTechPreview"),
]

config_setting(
    name = "netframework",
    values = {"define": "framework=netfx"},
)

config_setting(
    name = "netcore",
    values = {"define": "framework=netcore"},
)

[nunit_test(
    name = "{}".format(target_name),
    size = "enormous",
    srcs = glob([
        "*.cs",
        "CustomDriverConfigs/*.cs",
        "CustomTestAttributes/*.cs",
        "DevTools/*.cs",
        "Environment/*.cs",
        "HTML5/*.cs",
        "Interactions/*.cs",
    ]),
    out = "WebDriver.Common.Tests.dll",
    args = [
        "--workers=1",
        "--params=ConfigFile=$(location appconfig.json)",
        "--params=ActiveDriverConfig={}".format(config_setting),
    ],
    data = [
        "appconfig.json",
        "//common/src/web",
        "//java/client/test/org/openqa/selenium/environment:appserver_deploy.jar",
        "//java/client/test/org/openqa/selenium/environment:keystore",
        "//javascript/atoms",
        "//third_party/closure/goog",
        "//third_party/js/selenium:webdriver_json",
    ],
    is_windows = select({
        "@bazel_tools//src/conditions:host_windows": True,
        "//conditions:default": False,
    }),
    tags = [
        "no-sandbox",
        "requires-network",
    ],
    target_frameworks = select({
        ":netframework": ["net471"],
        ":netcore": ["netcoreapp2.1"],
        "//conditions:default": ["netcoreapp2.1"],
    }),
    visibility = ["//visibility:public"],
    deps = select({
        ":netframework": [
            "//dotnet/src/webdriver:net47assembly",
            "@json.net//:Newtonsoft.Json",
            "@benderproxy//:BenderProxy",
            "@moq//:Moq",
        ],
        ":netcore": [
            "//dotnet/src/webdriver:netstandard2.0assembly",
            "@json.net//:Newtonsoft.Json",
            "@benderproxy//:BenderProxy",
            "@moq//:Moq",
        ],
        "//conditions:default": [
            "//dotnet/src/webdriver:netstandard2.0assembly",
            "@json.net//:Newtonsoft.Json",
            "@benderproxy//:BenderProxy",
            "@moq//:Moq",
        ],
    }),
) for (target_name, config_setting) in SUPPORTED_BROWSERS]
